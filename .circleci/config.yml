# iOS CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/ios-migrating-from-1-2/ for more details
#
version: 2
executors:
  mac:
    macos:
      xcode: "10.1.0"
  go:
    docker:
      - image: circleci/golang:1.8
jobs:
  build_package:
    executor:
      name: mac
    steps:
      - checkout
      - run:
          command: make update_build_number
          name: Update build number
      - run:
          command: make package
          name: Build package
      - run:
          command: |
            mkdir -p artifacts
            mv "$CIRCLE_PROJECT_REPONAME.pkg" artifacts
          name: Move artifacts
      - persist_to_workspace:
          root: artifacts
          paths:
            - .
  publish_release:
    executor:
      name: go
    steps:
      - run:
          command: mkdir -p ./artifacts
      - attach_workspace:
          at: ./artifacts
      - run:
          command: |
            go get github.com/tcnksm/ghr
            ghr \
              -t ${GITHUB_TOKEN} \
              -u ${CIRCLE_PROJECT_USERNAME} \
              -r ${CIRCLE_PROJECT_REPONAME} \
              -c ${CIRCLE_SHA1} \
              -n ${CIRCLE_TAG} \
              -delete \
              -prerelease \
              ${CIRCLE_TAG} ./artifacts
          name: Publish release to GitHub
  swiftlint:
    executor:
      name: mac
    steps:
      - checkout
      - restore_cache:
          keys:
            - v{{ .Environment.CACHE_VERSION }}-build-cache-{{ arch }}-{{ checksum "Package.resolved" }}
          name: Restore swiftlint cache
      - run:
          command: |-
            mkdir -p build/reports/lint

            executable=.build/debug/swiftlint
            if ! [ $(command -v $executable) ]; then
              executable='swift run swiftlint'
            fi

            eval $executable lint --strict --reporter junit | tee build/reports/lint/junit.xml
          name: Lint
      - save_cache:
          key: v{{ .Environment.CACHE_VERSION }}-build-cache-{{ arch }}-{{ checksum "Package.resolved" }}
          paths:
            - .build/debug/swiftlint
          name: Save swiftlint cache
      - store_test_results:
          path: build/reports/lint
  test:
    executor:
      name: mac
    steps:
      - checkout
      - run: mkdir -p build/reports/test
      - run:
          name: Run tests
          command: make test
      - store_test_results:
          path: build/reports/test

workflows:
  version: 2
  build:
    jobs:
      - swiftlint
      - test
      - build_package:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
      - publish_release:
          requires:
            - swiftlint
            - test
            - build_package
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
